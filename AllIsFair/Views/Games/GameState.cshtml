@model AllIsFair.Models.Game

@{
    ViewBag.Title = "GameState";

}


<div class="container">

    <div class="row">
        <div class="topbar container">
            <h4>Alive: @Model.AliveCombatants</h4>
            <h4>Dead: @(Model.Combatants.Count - Model.AliveCombatants)</h4>
        </div>
    </div>

    @if (Model.ShowResult)
    {

    }
    else if (Model.AskWeapon)
    {

    }
    else if (Model.AskItem)
    {

    }
    else
    {
        <div class="row map">
            @foreach (var tile in Model.Tiles)
            {
                var color = "tileborder";
                if (Model.PossibleMoves.FirstOrDefault(t => t.Id == tile.Id) != null)
                {
                    color = "tilebordermove";
                }

                <div class="col-xs-1 tile container" style="padding: 0px; position: relative;" data-x="@tile.X" data-y="@tile.Y" data-type="@tile.Type">
                    <img class="img-responsive @color" style="position: relative; width: 100%; z-index: 1;" src="~/Graphics/@tile.GraphicName" data-x="@tile.X" data-y="@tile.Y" />

                    @if (tile.Combatant != null)
                    {
                        <img class="img-responsive" style="width: 100%; z-index: 2; position: absolute; top: 0; left: 0;" src="~/Graphics/@tile.Combatant.GraphicName" data-x="@tile.X" data-y="@tile.Y" />
                    }
                </div>
            }
        </div>
        <div class="row">
            <div class="col-xs-12 col-xs-offset-1">
                <div class="row bottombar stretchrow">
                    <div class="col-xs-3 col-xs-offset-1">
                        <h4>@Model.Player.Name</h4>
                        <br />
                        <h4>Health: @Model.Player.Health</h4>
                        <h4>Strength: @Model.Player.Strength</h4>
                        <h4>Speed: @Model.Player.Speed</h4>
                        <h4>Sanity: @Model.Player.Sanity</h4>
                        <h4>Perception: @Model.Player.Perception</h4>
                        <br />
                        <h4>Threat: @Model.Player.Threat</h4>
                        <br />
                        <h4>Survivability: @Model.Player.Survivability</h4>
                    </div>
                    @foreach (var item in Model.Player.Items)
                {

                    if (!Model.Player.Items.Any(x => x.IsWeapon))
                    {
                            <div class="card">
                                <h4>No Weapon</h4>
                            </div>
                        }

                        if (item.IsWeapon)
                        {
                            <div class="card">
                                <div class="cardtext">
                                    <h4> @item.Name </h4>
                                </div>
                                <img class="img-responsive" style="width: 100%;" src="~/Graphics/@item.GraphicName" />
                                <div class="cardtext">
                                    <h6>Range: @item.WeaponRange</h6>
                                    <h6>Threat: +@item.ThreatBonus</h6>
                                    <h6>Survival: +@item.SurvivalBonus</h6>
                                </div>
                            </div>
                        }

                    }
                    @foreach (var item in Model.Player.Items.Where(item => !item.IsWeapon))
                {
                        <div class="card">
                            <div class="cardtext">
                                <h4>@item.Name</h4>
                            </div>
                            <img class="img-responsive" style="width: 100%;" src="~/Graphics/@item.GraphicName" />
                            <div class="cardtext">
                                <h6>Counters: @item.Counter</h6>
                                <h6>Threat: +@item.ThreatBonus</h6>
                                <h6>Survival: +@item.SurvivalBonus</h6>
                            </div>
                        </div>
                    }
                    @{ var cardsLeft = Model.Player.Items.Count(x => !x.IsWeapon); }
                    @for (int i = cardsLeft; i < 4; i++)
                {
                        <div class="card">
                            <h4>No Item</h4>
                        </div>
                    }
                </div>
            </div>
        </div>
                        }
</div>




@section scripts{
    <script>
        $(document).ready(function () {
            $('#partialload').load('/Games/PartialManager');
        });

        $(".tile").click(function () {
            TryMove($(this));
        });

        function TryMove(item) {
            var x = item.data('x');
            var y = item.data('y');
            var type = item.data('type');
            console.log(x, y);
            $.ajax({
                type: "POST",
                data: { x2: x, y2: y },
                url: '@Url.Action("TryMove", "Games")'
            }).done(function (didAttack) {
                console.log(didAttack);
                if (didAttack) {
                    location.reload(true);
                } else {
                    DrawCard(type);
                    location.reload(true);
                }
            });
        }

        function DrawCard(type) {
            $.ajax({
                type: "POST",
                data: { type: type },
                url: '@Url.Action("DrawEvent", "Games")'
            });
        }
    </script>
}